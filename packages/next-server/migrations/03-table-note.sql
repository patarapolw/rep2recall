CREATE TABLE "note" (
  "id"          INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "userId"      UUID NOT NULL REFERENCES "user"("id"),
  "shortId"     TEXT NOT NULL,
  "deck"        TEXT,
  "front"       TEXT,
  "back"        TEXT,
  "mnemonic"    TEXT,
  "data"        JSONB,
  "srsLevel"    INT,
  "nextReview"  TIMESTAMP,
  "lastRight"   TIMESTAMP,
  "lastWrong"   TIMESTAMP,
  "rightStreak" INT,
  "wrongStreak" INT,
  "maxRight"    INT,
  "maxWrong"    INT,
  "createdAt"   TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt"   TIMESTAMP,
  UNIQUE ("userId", "shortId")
);

CREATE INDEX "note_srsLevel"    ON "note"("srsLevel");
CREATE INDEX "note_nextReview"  ON "note"("nextReview");
CREATE INDEX "note_lastRight"   ON "note"("lastRight");
CREATE INDEX "note_lastWrong"   ON "note"("lastWrong");
CREATE INDEX "note_rightStreak" ON "note"("rightStreak");
CREATE INDEX "note_wrongStreak" ON "note"("wrongStreak");
CREATE INDEX "note_maxRight"    ON "note"("maxRight");
CREATE INDEX "note_maxWrong"    ON "note"("maxWrong");
CREATE INDEX "note_createdAt"   ON "note"("createdAt");
CREATE INDEX "note_updatedAt"   ON "note"("updatedAt");

-- DROP TRIGGER IF EXISTS "t_note_shortId" ON "note";
CREATE TRIGGER "t_note_shortId"
  BEFORE INSERT ON "note"
  FOR EACH ROW
  WHEN (NEW."shortId" IS NULL)
  EXECUTE PROCEDURE "f_shortId"();

-- DROP TRIGGER IF EXISTS "t_note_updatedAt" ON "note";
CREATE TRIGGER "t_note_updatedAt"
  BEFORE UPDATE ON "note"
  FOR EACH ROW
  EXECUTE PROCEDURE "f_updatedAt"();
