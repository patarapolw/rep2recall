/* eslint-disable @typescript-eslint/no-unsafe-call */
/* eslint-disable @typescript-eslint/no-unsafe-member-access */
/* eslint-disable @typescript-eslint/explicit-module-boundary-types */
import path from "path";

export default {
    /**
     * Function that mutates the original webpack config.
     * Supports asynchronous changes when a promise is returned (or it's an async function).
     *
     * @param {object} config - original webpack config.
     * @param {object} env - options passed to the CLI.
     * @param {WebpackConfigHelpers} helpers - object with useful helpers for working with the webpack config.
     * @param {object} options - this is mainly relevant for plugins (will always be empty in the config), default to an empty object
     **/
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    webpack(config, env, helpers, options) {
        config.module.rules[4].use.splice(1, 0, {
            loader: "@teamsupercell/typings-for-css-modules-loader",
            options: {
                banner:
                    "// This file is automatically generated from your CSS. Any edits will be overwritten.",
                disableLocalsExport: true,
            },
        });

        // Use any `index` file, not just index.js
        config.resolve.alias["preact-cli-entrypoint"] = path.resolve(
            // eslint-disable-next-line no-undef
            __dirname,
            "src",
            "index"
        );

        Object.assign(config.resolve.alias, {
            react: "preact-compat",
            "react-dom": "preact-compat",
        });
    },
};
